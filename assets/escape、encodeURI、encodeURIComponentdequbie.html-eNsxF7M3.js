import{_ as n,o as e,c as a,b as s,a as o}from"./app-Zy-6XiuU.js";const c={},t=s(`<p><code>escape()</code>, <code>encodeURI()</code>, 和 <code>encodeURIComponent()</code> 都是用于在 JavaScript 中处理字符串的方法，但它们的作用和用法有一些不同。</p><h4 id="escape" tabindex="-1"><a class="header-anchor" href="#escape" aria-hidden="true">#</a> escape()</h4><ul><li><code>escape()</code> 方法用于对字符串进行编码，将非 ASCII 字符和某些特殊字符转换为 <code>%</code> 后跟两位十六进制表示的字符。</li><li>该方法已被废弃，不推荐使用，因为它不会对所有字符进行正确编码，而且在处理 URI 和 URL 时存在问题。通常，应该使用 <code>encodeURI()</code> 或 <code>encodeURIComponent()</code> 来代替。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> originalString <span class="token operator">=</span> <span class="token string">&quot;你好，world!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> encodedString <span class="token operator">=</span> <span class="token function">escape</span><span class="token punctuation">(</span>originalString<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>encodedString<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;%u4F60%u597D%uFF0Cworld%21&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="encodeuri" tabindex="-1"><a class="header-anchor" href="#encodeuri" aria-hidden="true">#</a> encodeURI()</h4><ul><li><code>encodeURI()</code> 方法用于对整个 URI 进行编码，它将字符串中的特殊字符进行编码，但保留某些字符（例如 <code>/</code>, <code>:</code>, <code>?</code>, <code>&amp;</code>, <code>=</code>）不编码，以便构建有效的 URI。</li><li>这个方法通常用于编码整个 URI，而不是单独的参数值。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> uri <span class="token operator">=</span> <span class="token string">&quot;https://www.example.com/search?query=你好&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> encodedURI <span class="token operator">=</span> <span class="token function">encodeURI</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>encodedURI<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;https://www.example.com/search?query=%E4%BD%A0%E5%A5%BD&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="encodeuricomponent" tabindex="-1"><a class="header-anchor" href="#encodeuricomponent" aria-hidden="true">#</a> encodeURIComponent()</h4><ul><li><code>encodeURIComponent()</code> 方法用于对 URI 组件中的特殊字符进行编码，包括 <code>/</code>, <code>:</code>, <code>?</code>, <code>&amp;</code>, <code>=</code>, 空格等。这个方法通常用于编码单独的参数值，以确保参数值不会破坏 URI 的结构。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> paramValue <span class="token operator">=</span> <span class="token string">&quot;你哈:?&amp;/=&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> encodedParamValue <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>paramValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>encodedParamValue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;%E4%BD%A0%E5%93%88%3A%3F%26%2F%3D&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结：</p><ul><li><code>escape()</code> 已被废弃，不应再使用。</li><li><code>encodeURI()</code> 用于编码整个 URI，通常用于整个 URL 的编码，保留某些字符（例如 <code>/</code>, <code>:</code>, <code>?</code>, <code>&amp;</code>, <code>=</code>）不编码。</li><li><code>encodeURIComponent()</code> 用于编码 URI 组件中的特殊字符，通常用于单独的参数值的编码。</li></ul>`,12),p=o("iframe",{frameborder:"0",scrolling:"no",allowfullscreen:"true",allow:"allowfullscreen",crossorigin:"anonymous",src:"https://www.xmind.app/embed-viewer","data-event-channel-setup":"true",style:{"box-sizing":"border-box",display:"block",height:"804.797px",width:"688px"}},null,-1),d=[t,p];function l(i,u){return e(),a("div",null,d)}const k=n(c,[["render",l],["__file","escape、encodeURI、encodeURIComponentdequbie.html.vue"]]);export{k as default};
