import{_ as t,r as o,o as l,c,a as n,d as s,e,b as p}from"./app-Zy-6XiuU.js";const i={},r=p(`<h2 id="webpack-优化配置" tabindex="-1"><a class="header-anchor" href="#webpack-优化配置" aria-hidden="true">#</a> webpack 优化配置</h2><p>怎么让构建更快？</p><ul><li>少处理一些文件，干的事情少了，是不是就会快了</li><li>不处理没变化的文件（使用缓存）</li><li>提前处理好一些文件（不会经常变化那种），不用每次构建都重复处理一些不会经常变的依赖</li><li>买个好电脑, 多线程构建</li></ul><p>怎么让体积更小？</p><ul><li>资源压缩（代码、图片、音视频资源、html、css、js、字体）</li><li><code>gzip</code>压缩</li><li>提取公共模块代码</li><li>去掉没用到的资源</li></ul><p>达成以上两点，加载应该也就快了。</p><h3 id="exclude-include" tabindex="-1"><a class="header-anchor" href="#exclude-include" aria-hidden="true">#</a> exclude/include</h3><p>配置 <code>exclude/include</code>，可以减少处理的文件数量，通常在各个 <code>Loader</code> 中配置，避免不必要的转译。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">src</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用编译缓存" tabindex="-1"><a class="header-anchor" href="#使用编译缓存" aria-hidden="true">#</a> 使用编译缓存</h3><p>使用编译缓存，构建时未变化的文件如果存在缓存就使用缓存，不再编译。减少编译数量以提升构建速度。有些 <code>Loader/Plugin</code> 会提供一个可使用编译缓存的选项，通常包含 <code>cache</code> 字眼。比如 <code>babel-loader</code> 和 <code>eslint-webpack-plugin</code> :</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> EslintPlugin <span class="token keyword">from</span> <span class="token string">&quot;eslint-webpack-plugin&quot;</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">cacheDirectory</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">EslintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有缓存相关选项，可以用<code>cache-loader</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.ext$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;cache-loader&quot;</span><span class="token punctuation">,</span> <span class="token operator">...</span>loaders<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">include</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置externals排除一些依赖" tabindex="-1"><a class="header-anchor" href="#配置externals排除一些依赖" aria-hidden="true">#</a> 配置<code>externals</code>排除一些依赖</h3><p><code>externals</code>配置可在打包的时候排除一些依赖，排除的依赖需要手动引入，可以直接下载一个生产环境的包在<code>index.html</code>中引入，来一个例子:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 其他配置</span>
  <span class="token literal-property property">externals</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">//  需要将对应的js文件直接在index.html中引入</span>
    <span class="token literal-property property">vue</span><span class="token operator">:</span> <span class="token string">&quot;Vue&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;vue-router&quot;</span><span class="token operator">:</span> <span class="token string">&quot;VueRouter&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">vuex</span><span class="token operator">:</span> <span class="token string">&quot;Vuex&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">axios</span><span class="token operator">:</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">xlsx</span><span class="token operator">:</span> <span class="token string">&quot;XLSX&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">echarts</span><span class="token operator">:</span> <span class="token string">&quot;echarts&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 其他配置</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的配置中，我们指定了<code>vue、vue-router、axios、xlsx、echarts</code>这几个包在构建时不处理，而是在<code>index.html</code>中引入。其中<code>externals</code> 配置的 <code>key</code> 为包名, <code>value</code>是这个包导出的变量名。比如：<img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/21b2a1ae57594e439fb150b81fcdf8a9~tplv-k3u1fbpfcp-watermark.image?" alt="WechatIMG15.png"></p><h3 id="提前打包第三方依赖" tabindex="-1"><a class="header-anchor" href="#提前打包第三方依赖" aria-hidden="true">#</a> 提前打包第三方依赖</h3><p>利用<code>DllPlugin</code>提前打包第三方依赖，提前将不会经常变化的依赖/模块打包为<code>DLL</code>文件并存到硬盘里，再次打包时动态链接<code>DLL</code>文件，就无需再次打包那些公共代码，只构建业务代码，从而减少打包时间。（<code>webpackV2</code>就已存在，<code>webpackV4+</code>已不推荐使用，因为版本升级带来的构建提升可以忽略该配置带来的效果，但为了那几秒提升，还是可以配置上的。）</p>`,20),u={href:"https://webpack.docschina.org/plugins/dll-plugin/#dllplugin",target:"_blank",rel:"noopener noreferrer"},d=p(`<p>✅ 也可使用 <code>autodll-webpack-plugin</code> 代替手动配置</p><h3 id="thread-loader多线程构建" tabindex="-1"><a class="header-anchor" href="#thread-loader多线程构建" aria-hidden="true">#</a> <code>thread-loader</code>多线程构建</h3><p>利用<code>thread-loader</code>开启多个线程并行构建，(通常用于较耗时的<code>loader</code>，若项目需要处理的文件不是很多，没必要采用这种优化手段，因为开启多个线程也会存在性能开销。)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Os <span class="token keyword">from</span> <span class="token string">&quot;os&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;thread-loader&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">workers</span><span class="token operator">:</span> Os<span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">cacheDirectory</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="可视化分析优化" tabindex="-1"><a class="header-anchor" href="#可视化分析优化" aria-hidden="true">#</a> 可视化分析优化</h3><p>使用<code>webpack-bundle-analyzer</code>分析打包产物，可直观分析打包文件的模块组成部分、模块体积占比、模块包含关系、模块依赖关系、文件是否重复、压缩体积对比等可视化数据，然后有针对性优化。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> BundleAnalyzerPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;webpack-bundle-analyzer&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">BundleAnalyzerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="splitchunks" tabindex="-1"><a class="header-anchor" href="#splitchunks" aria-hidden="true">#</a> splitChunks</h3>`,8),k=n("code",null,"splitChunks",-1),v=n("code",null,"splitChunks",-1),m={href:"https://webpack.docschina.org/configuration/optimization/#optimizationsplitchunks",target:"_blank",rel:"noopener noreferrer"},b=p(`<h3 id="tree-shaking" tabindex="-1"><a class="header-anchor" href="#tree-shaking" aria-hidden="true">#</a> Tree Shaking</h3><p>摇树优化<code>（Tree Shaking）mode</code> 为 <code>production</code> 时默认开启优化，无需额外配置，不过只对<code>ESM</code>规范的模块生效。</p><p>js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="代码垫片" tabindex="-1"><a class="header-anchor" href="#代码垫片" aria-hidden="true">#</a> 代码垫片</h3><h4 id="babel-preset-env-和-core-js。" tabindex="-1"><a class="header-anchor" href="#babel-preset-env-和-core-js。" aria-hidden="true">#</a> @babel/preset-env 和 core-js。</h4><p><code>@babel/preset-env</code> 的 <code>useBuiltIns</code> 配置说明：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// false / entry / usage</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/plugin-syntax-dynamic-import&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>false</code>：无视<code>target.browsers</code>将所有<code>Polyfill</code>加载进来。</li><li><code>entry</code>：根据<code>target.browsers</code>将部分<code>Polyfill</code>加载进来(仅引入有浏览器不支持的<code>Polyfill</code>，需在入口文件<code>import &#39;core-js/stable&#39;</code>)。</li><li><code>usage</code>：根据<code>target.browsers</code>和检测代码里<code>ES6</code>的使用情况将部分<code>Polyfill</code>加载进来(无需在入口文件<code>import &#39;core-js/stable&#39;</code>)。</li></ul><h4 id="动态垫片" tabindex="-1"><a class="header-anchor" href="#动态垫片" aria-hidden="true">#</a> 动态垫片</h4><p>动态垫片可根据浏览器<code>UserAgent</code>返回当前浏览器<code>Polyfill</code>，其思路是根据浏览器的<code>UserAgent</code>从<code>browserlist</code>查找出当前浏览器哪些特性缺乏支持从而 返回这些特性的<code>Polyfill</code>。动态垫片的服务参考：</p><ul><li>https://polyfill.io/v3/polyfill.min.js</li><li>https://polyfill.alicdn.com/polyfill.min.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> HtmlTagsPlugin <span class="token keyword">from</span> <span class="token string">&quot;html-webpack-tags-plugin&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">HtmlTagsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">append</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 在生成资源后插入</span>
      <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 使用公共路径</span>
      <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;https://polyfill.alicdn.com/polyfill.min.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 资源路径</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="按需加载" tabindex="-1"><a class="header-anchor" href="#按需加载" aria-hidden="true">#</a> 按需加载</h3><p>按需加载将路由页面/触发性功能单独打包为一个文件，使用时才加载，减轻首屏渲染的负担，因为项目功能越多其打包体积越大，导致首屏渲染速度越慢。把项目中只有当触发某些功能时才会用到的资源文件使用 <code>import()</code> 导入，<code>webpack</code> 会将这个模块识别为异步模块独立成为 <code>chunk</code>，仅当需要时才会发送网络请求加载。可能控制台会报错，需要在<code>Babel</code>的配置文件中加上以下配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">babel</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/plugin-syntax-dynamic-import&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>import()</code>语法参考：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 单个目标</span>
<span class="token keyword">import</span><span class="token punctuation">(</span>
  <span class="token comment">/* webpackChunkName: &#39;my-chunk-name&#39; */</span>
  <span class="token comment">/* webpackMode: &#39;lazy&#39; */</span>
  <span class="token comment">/* webpackExports: [&#39;default&#39;, &#39;named&#39;] */</span>
  <span class="token string">&quot;module&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 多个可能的目标</span>
<span class="token keyword">import</span><span class="token punctuation">(</span>
  <span class="token comment">/* webpackInclude: /\\.json$/ */</span>
  <span class="token comment">/* webpackExclude: /\\.noimport\\.json$/ */</span>
  <span class="token comment">/* webpackChunkName: &#39;my-chunk-name&#39; */</span>
  <span class="token comment">/* webpackMode: &#39;lazy&#39; */</span>
  <span class="token comment">/* webpackPrefetch: true */</span>
  <span class="token comment">/* webpackPreload: true */</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./locale/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>language<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="压缩资源" tabindex="-1"><a class="header-anchor" href="#压缩资源" aria-hidden="true">#</a> 压缩资源</h3><p>压缩资源（<code>HTML/CSS/JS</code>代码，压缩字体/图像/音频/视频）能够有效减少打包体积，极致地优化代码都有可能不及优化一个资源文件的体积更有效。</p><p><code>html</code>使用<code>html-webpack-plugin</code>开启压缩功能：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> HtmlPlugin <span class="token keyword">from</span> <span class="token string">&quot;html-webpack-plugin&quot;</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">HtmlPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 压缩HTML</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>css</code>压缩使用<code>optimize-css-assets-webpack-plugin</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> OptimizeCssAssetsPlugin <span class="token keyword">from</span> <span class="token string">&quot;optimize-css-assets-webpack-plugin&quot;</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">cssProcessorOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">autoprefixer</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">remove</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 设置autoprefixer保留过时样式</span>
          <span class="token literal-property property">safe</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 避免cssnano重新计算z-index</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 代码压缩</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ES5</code>压缩使用<code>uglifyjs-webpack-plugin</code>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> UglifyjsPlugin <span class="token keyword">from</span> <span class="token string">&#39;uglifyjs-webpack-plugin&#39;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token keyword">new</span> <span class="token class-name">UglifyjsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 缓存文件</span>
                <span class="token literal-property property">parallel</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 并行处理</span>
                <span class="token literal-property property">uglifyOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">beautify</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">drop_console</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token comment">// 压缩配置</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span> <span class="token comment">// 代码压缩</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token constant">ES6</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">的</span><span class="token template-punctuation string">\`</span></span><span class="token constant">JS</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">代码压缩使用</span><span class="token template-punctuation string">\`</span></span>terser<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> TerserPlugin <span class="token keyword">from</span> <span class="token string">&quot;terser-webpack-plugin&quot;</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 缓存文件</span>
        <span class="token literal-property property">parallel</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 并行处理</span>
        <span class="token literal-property property">terserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">beautify</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">drop_console</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 压缩配置</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 代码压缩</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图片可直接使用开源的 <code>tinyimg-webpack-plugin</code> 插件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> TinyimgPlugin <span class="token keyword">from</span> <span class="token string">&quot;tinyimg-webpack-plugin&quot;</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">TinyimgPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gzip压缩" tabindex="-1"><a class="header-anchor" href="#gzip压缩" aria-hidden="true">#</a> <code>Gzip</code>压缩</h3><ul><li>是一种<code>HTTP</code>压缩的方式。</li><li>如果不是几<code>kb</code>的文件，都可开启<code>Gzip</code>试试。</li><li>通常经过<code>Gzip</code>压缩后，大约能够减少<code>70%</code>的体积。</li><li><code>webpack</code>的<code>Gzip</code>使用 <code>compression-webpack-plugin</code> 插件实现（可以为服务器分压，毕竟服务器压缩需要时间开销和 <code>CPU</code> 开销）</li></ul><p><strong>压缩原理：在被压缩的文本文件中找出一些重复的字符串并临时替换它们，达到减小体积的目的。因此若文本文件中的重复代码越多，压缩的效果就越好</strong>。</p><h4 id="服务端开启-gzip" tabindex="-1"><a class="header-anchor" href="#服务端开启-gzip" aria-hidden="true">#</a> 服务端开启 Gzip</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">客户端请求头设置</span><span class="token operator">:</span> accept<span class="token operator">-</span>encoding<span class="token operator">:</span>gzip
<span class="token literal-property property">服务端（nginx）</span><span class="token operator">:</span>
#开启和关闭gzip模式
gzip on<span class="token operator">|</span>off<span class="token punctuation">;</span>

#gizp压缩起点，文件大于1k才进行压缩
gzip_min_length 1k<span class="token punctuation">;</span>

# gzip 压缩级别，<span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span>，数字越大压缩的越好，也越占用<span class="token constant">CPU</span>时间
gzip_comp_level <span class="token number">1</span><span class="token punctuation">;</span>

# 进行压缩的文件类型。
gzip_types text<span class="token operator">/</span>plain application<span class="token operator">/</span>javascript application<span class="token operator">/</span>x<span class="token operator">-</span>javascript text<span class="token operator">/</span>css application<span class="token operator">/</span>xml text<span class="token operator">/</span>javascript <span class="token punctuation">;</span>

#nginx对于静态文件的处理模块，开启后会寻找以<span class="token punctuation">.</span>gz结尾的文件，直接返回，不会占用cpu进行压缩，如果找不到则不进行压缩
gzip_static on<span class="token operator">|</span>off

# 是否在http header中添加Vary<span class="token operator">:</span> Accept<span class="token operator">-</span>Encoding，建议开启
gzip_vary on<span class="token punctuation">;</span>

# 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请<span class="token number">2</span><span class="token operator">*</span>4k的缓冲区
gzip_buffers <span class="token number">2</span> 4k<span class="token punctuation">;</span>

# 设置gzip压缩针对的<span class="token constant">HTTP</span>协议版本
gzip_http_version <span class="token number">1.1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="webpack-gzip-plugin" tabindex="-1"><a class="header-anchor" href="#webpack-gzip-plugin" aria-hidden="true">#</a> webpack Gzip plugin</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> CompressionPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;compression-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token keyword">new</span> <span class="token class-name">CompressionPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;[path][base].gz&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">algorithm</span><span class="token operator">:</span> <span class="token string">&quot;gzip&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$|\\.css$|\\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minRatio</span><span class="token operator">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">//...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,37),g={href:"https://mp.weixin.qq.com/s/nES0HWRyTVg05sfxj25WJQ",target:"_blank",rel:"noopener noreferrer"},y={href:"https://juejin.cn/book/6844733750048210957",target:"_blank",rel:"noopener noreferrer"};function h(x,f){const a=o("ExternalLinkIcon");return l(),c("div",null,[r,n("p",null,[s("参考 "),n("a",u,[s("webpack 文档中的示例"),e(a)])]),d,n("p",null,[s("使用 "),k,s("分割各个模块代码，提取相同部分代码。"),v,s(" 的"),n("a",m,[s("配置项"),e(a)]),s("很多，需要根据项目实际情况进行相应的配置。")]),b,n("blockquote",null,[n("p",null,[n("a",g,[s("写给中高级前端关于性能优化的 9 大策略和 6 大指标 | 网易四年实践"),e(a)])])]),n("blockquote",null,[n("p",null,[s("掘金小册——"),n("a",y,[s("前端性能优化原理与实践"),e(a)])])])])}const j=t(i,[["render",h],["__file","Webpack goujianyouhuacelue.html.vue"]]);export{j as default};
