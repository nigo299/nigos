import{_ as n,o as s,c as a,b as t}from"./app-Zy-6XiuU.js";const e={},o=t(`<h3 id="react-合成事件机制" tabindex="-1"><a class="header-anchor" href="#react-合成事件机制" aria-hidden="true">#</a> React 合成事件机制</h3><ul><li><code>React16</code>事件绑定到<code>document</code>上</li><li><code>React17</code>事件绑定到<code>root</code>组件上，有利于多个<code>react</code>版本共存，例如微前端</li><li><code>event</code>不是原生的，是<code>SyntheticEvent</code>合成事件对象</li><li>和<code>Vue</code>不同，和<code>DOM</code>事件也不同</li></ul><p><img src="https://nigo299.github.io/nigos/react1.png" alt="img"></p><p><strong>合成事件图示</strong></p><p><img src="https://nigo299.github.io/nigos/react2.png" alt="img"></p><p><strong>为何需要合成事件</strong></p><ul><li>更好的兼容性和跨平台，如<code>react native</code></li><li>挂载到<code>document</code>或<code>root</code>上，减少内存消耗，避免频繁解绑</li><li>方便事件的统一管理（如事务机制）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取 event</span>
<span class="token function-variable function">clickHandler3</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 阻止默认行为</span>
  event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 阻止冒泡</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;target&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 指向当前元素，即当前元素触发</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;current target&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 指向当前元素，假象！！！</span>

  <span class="token comment">// 注意，event 其实是 React 封装的。可以看 __proto__.constructor 是 SyntheticEvent 组合事件</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;event&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不是原生的 Event ，原生的 MouseEvent</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;event.__proto__.constructor&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 原生 event 如下。其 __proto__.constructor 是 MouseEvent</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;nativeEvent&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>nativeEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;nativeEvent target&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>nativeEvent<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 指向当前元素，即当前元素触发</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;nativeEvent current target&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>nativeEvent<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 指向 document ！！！</span>

  <span class="token comment">// 1. event 是 SyntheticEvent ，模拟出来 DOM 事件所有能力</span>
  <span class="token comment">// 2. event.nativeEvent 是原生事件对象</span>
  <span class="token comment">// 3. 所有的事件，都被挂载到 document 上</span>
  <span class="token comment">// 4. 和 DOM 事件不一样，和 Vue 事件也不一样</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),c=[o];function p(i,u){return s(),a("div",null,c)}const r=n(e,[["render",p],["__file","Reacthechengshijianjizhi.html.vue"]]);export{r as default};
