import{_ as o,r as a,o as s,c as n,a as i,d as e,e as d,b as l}from"./app-Zy-6XiuU.js";const r={},c=l('<p>CSS 有三种基本的定位机制：普通流、浮动（float）和绝对定位（position）。</p><p>除非专门指定，否则所有框都在普通流中定位。也就是说，普通流中的元素的位置由元素在 (X)HTML 中的位置决定。</p><p>块级框从上到下一个接一个地排列，框之间的垂直距离是由框的垂直外边距计算出来。</p><p>行内框在一行中水平布置。可以使用水平内边距、边框和外边距调整它们的间距。但是，垂直内边距、边框和外边距不影响行内框的高度。由一行形成的水平框称为<em>行框（Line Box）</em>，行框的高度总是足以容纳它包含的所有行内框。不过，设置行高可以增加这个框的高度。</p><h2 id="标准文档流的概念" tabindex="-1"><a class="header-anchor" href="#标准文档流的概念" aria-hidden="true">#</a> 标准文档流的概念</h2><p>标准流指的是在不使用其他的与排列和定位相关的特殊 CSS 规则时，各种元素的排列规则。HTML 文档中的元素可以分为两大类：行内元素和块级元素。</p><ol><li>行内元素不占据单独的空间，依附于块级元素，行内元素没有自己的区域，从左到右排列。它同样是 DOM 树中的一个节点，在这一点上行内元素和块级元素是没有区别的。</li><li>块级元素总是以块的形式表现出来，并且跟同级的兄弟块依次竖直排列，左右自动伸展，直到包含它的元素的边界，在水平方向不能并排。</li></ol><h2 id="css-position-属性" tabindex="-1"><a class="header-anchor" href="#css-position-属性" aria-hidden="true">#</a> CSS position 属性</h2>',8),p={href:"https://www.w3school.com.cn/cssref/pr_class_position.asp",target:"_blank",rel:"noopener noreferrer"},u=l(`<p>position 属性值的含义：</p><ul><li><p>static（默认值）</p><p>元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分，行内元素则会创建一个或多个行框，置于其父元素中。此时 <code>top</code>, <code>right</code>, <code>bottom</code>, <code>left</code> 和 <code>z-index</code>属性无效。</p></li><li><p>relative</p><p>元素框偏移某个距离。元素仍保持其未定位前的形状，它原本所占的空间仍保留。</p><p>(相对于原来本身的位置通过 top,bottom,left,right 定位，并且可以通过 z-index 进行层次分级。)</p></li><li><p>absolute</p><p>元素框从文档流完全删除（脱离标准文档流），并相对于其包含块定位。包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。</p><p>（通过 top,bottom,left,right 定位，定位的起始位置为最近的父元素(postion 不为 static)，否则为 Body 坐标原点，可以通过 z-index 进行层次分级。）</p></li><li><p>fixed</p><p>元素框的表现类似于将 position 设置为 absolute，不过其包含块是视窗本身。</p><p>（固定定位，脱离文档流，相对于浏览器窗口进行定位，在拖拽页面滚动条时，该元素不会随其一起滚动，可以通过 z-index 进行层次分级。）</p></li></ul><p>**FAQ：**相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。</p><h2 id="float" tabindex="-1"><a class="header-anchor" href="#float" aria-hidden="true">#</a> float</h2><ul><li>浮动的元素脱离了标准文档流，即脱标</li><li>浮动的元素互相贴靠</li><li>浮动的元素会产生”字围“效果</li><li>浮动元素有收缩效果</li></ul><h2 id="元素脱离文档流引发父级边框塌陷问题" tabindex="-1"><a class="header-anchor" href="#元素脱离文档流引发父级边框塌陷问题" aria-hidden="true">#</a> 元素脱离文档流引发父级边框塌陷问题</h2><p>如果使用 position:absolute 和 position:fixed 都会导致元素脱离文档流，由此就会产生相应的问题：子元素脱离文档流，父元素无法被撑开。</p><p>解决方法:</p><ul><li>将父级边框的高度 height 写成一个固定的高度。</li><li>增加一个空的 div 标签, 清除浮动。设置样式。</li></ul><p>css</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>clear: both;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>父类增加一个伪类</li></ul><p>css</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.demo:after {
  content: &#39;&#39;;
  display: block;
  clear: both;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置 overflow 属性</li></ul><p>css</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>overflow: scroll;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17);function h(v,m){const t=a("ExternalLinkIcon");return s(),n("div",null,[c,i("p",null,[e("通过使用 "),i("a",p,[e("position 属性"),d(t)]),e("，我们可以选择 4 种不同类型的定位，这会影响元素框生成的方式。")]),u])}const b=o(r,[["render",h],["__file","position.html.vue"]]);export{b as default};
